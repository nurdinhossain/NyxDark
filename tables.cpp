#include "tables.h"

// piece-square tables
int PAWN_TABLE_OPENING[64] =
{
    0,  0,  0,  0,  0,  0,  0,  0,
    5,  8,  8,-10,-10,  8,  8,  5,
    2, -5,-10,  0,  0,-10, -5,  2,
    0,  0,  0, 10, 10,  0,  0,  0,
    5,  5, 8, 15, 15, 8,  5,  5,
    10, 10, 15, 20, 20, 15, 10, 10,
    40, 40, 40, 40, 40, 40, 40, 40,
    0,  0,  0,  0,  0,  0,  0,  0
};

int PAWN_TABLE_ENDGAME[64] =
{
    0, 0, 0, 0, 0, 0, 0, 0,
    -10, -10, -10, -10, -10, -10, -10, -10,
    10, 10, 10, 10, 10, 10, 10, 10,
    20, 20, 20, 20, 20, 20, 20, 20,
    30, 30, 30, 30, 30, 30, 30, 30,
    40, 40, 40, 40, 40, 40, 40, 40,
    60, 60, 60, 60, 60, 60, 60, 60,
    0, 0, 0, 0, 0, 0, 0, 0
};

int KNIGHT_TABLE_OPENING[64] =
{
    -15, -10, -8, -8, -8, -8, -10, -15,
    -10, -8, 0, 0, 0, 0, -8, -10,
    -5, 2, 10, 5, 5, 10, 2, -5,
    -5, 3, 8, 10, 10, 8, 3, -5,
    -3, 5, 10, 12, 12, 10, 5, -3,
    -3, 7, 12, 14, 14, 12, 7, -3,
    -6, 4, 6, 8, 8, 6, 4, -6,
    -10, -8, -7, -6, -6, -7, -8, -10
};

int KNIGHT_TABLE_ENDGAME[64] =
{
    -5,-5,-5,-5,-5,-5,-5,-5,
    -5, 5, 5, 5, 5, 5, 5,-5,
    -5, 5,10,10,10,10, 5,-5,
    -5, 5,10,10,10,10, 5,-5,
    -3, 7,12,12,12,12, 7,-3,
    -3, 7,12,12,12,12, 7,-3,
    -3, 7, 7, 7, 7, 7, 7,-3,
    -5,-5,-5,-5,-5,-5,-5,-5
};

int BISHOP_TABLE_OPENING[64] =
{
    -15, -5, -5, -5, -5, -5, -5,-15,
    -10, 15,  0,  0,  0,  0, 15,-10,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -10,  0, 10, 10, 10, 10,  0,-10,
    -10,  5,  5, 10, 10,  5,  5,-10,
    -10,  0,  5, 10, 10,  5,  0,-10,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -15,-10,-10,-10,-10,-10,-10,-15
};

int BISHOP_TABLE_ENDGAME[64] =
{
    -15,-10,-10,-10,-10,-10,-10,-15,
    -10,  5,  5,  5,  5,  5,  5,-10,
    -10,  5, 10, 10, 10, 10,  5,-10,
    -10,  5, 10, 15, 15, 10,  5,-10,
    -10,  5, 10, 15, 15, 10,  5,-10,
    -10,  5, 10, 10, 10, 10,  5,-10,
    -10,  5,  5,  5,  5,  5,  5,-10,
    -15,-10,-10,-10,-10,-10,-10,-15
};

int ROOK_TABLE_OPENING[64] =
{
    0,  0,  0,  5,  5,  0,  0,  0,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    -5,  0,  0,  0,  0,  0,  0, -5,
    5, 10, 10, 10, 10, 10, 10,  5,
    0,  0,  0,  0,  0,  0,  0,  0
};

int ROOK_TABLE_ENDGAME[64] =
{
    1, 1, 2, 2, 2, 2, 1, 1,
    1, 1, 2, 2, 2, 2, 1, 1,
    1, 1, 2, 2, 2, 2, 1, 1,
    1, 1, 2, 2, 2, 2, 1, 1,
    1, 1, 2, 2, 2, 2, 1, 1,
    1, 1, 2, 2, 2, 2, 1, 1,
    2, 2, 3, 3, 3, 3, 2, 2,
    3, 3, 3, 3, 3, 3, 3, 3
};

int QUEEN_TABLE_OPENING[64] =
{
    -15,-10,-10, -5, 10,-10,-10,-15,
    -10,  0,  0,  5,  0,  5,  0,-10,
    -10, -5,  2, -5, -5, -5,  2,-10,
    -15,-10,-10,-10,-10,-10,-10,-15,
    -15,-10,-10,-10,-10,-10,-10,-15,
    -15,-10,-10,-10,-10,-10,-10,-15,
    -15,-10,-10,-10,-10,-10,-10,-15,
    -15,-15,-15,-15,-15,-15,-15,-15,
};

int QUEEN_TABLE_ENDGAME[64] =
{
    -10, -5, -5,  -5,  -5, -5, -5,-10,
     -5,  6,  6,   6,   6,  6,  6, -5,
     -5,  6,  8,   8,   8,  8,  6, -5,
     -5,  6,  8,  10,  10,  8,  6, -5,
     -5,  8,  8,  10,  10,  8,  8, -5,
     -5,  8,  8,   8,   8,  8,  8, -5,
     -5,  8,  8,   8,   8,  8,  8, -5,
    -10, -5, -5,  -5,  -5, -5, -5,-10
};

int KING_TABLE_OPENING[64] =
{
     5, 20,-10, -15,-15, 20, 15,  5,
     5, 5, -10, -15,-15,-10,  5,  5,
    -10,-20,-20,-20,-20,-20,-20,-10,
    -20,-20,-20,-20,-20,-20,-20,-20,
    -20,-20,-20,-20,-20,-20,-20,-20,
    -20,-20,-20,-20,-20,-20,-20,-20,
    -20,-20,-20,-20,-20,-20,-20,-20,
    -20,-20,-20,-20,-20,-20,-20,-20,
};

int KING_TABLE_ENDGAME[64] =
{
    -20,-15,-15,-10,-10,-15,-15,-20,
    -15, -5,  5,  5,  5,  5, -5,-15,
    -15,  5, 10, 15, 15, 10,  5,-15,
    -15,  5, 15, 17, 17, 15,  5,-15,
    -15,  8, 17, 17, 17, 17,  8,-15,
    -15,  8, 17, 17, 17, 17,  8,-15,
    -15,  3,  5,  5,  5,  5,  3,-15,
    -20,-15,-15,-10,-10,-15,-15,-20
};

// multi-dimensional array of piece-square tables
int *TABLES[6][2] =
    {
        {PAWN_TABLE_OPENING, PAWN_TABLE_ENDGAME},
        {KNIGHT_TABLE_OPENING, KNIGHT_TABLE_ENDGAME},
        {BISHOP_TABLE_OPENING, BISHOP_TABLE_ENDGAME},
        {ROOK_TABLE_OPENING, ROOK_TABLE_ENDGAME},
        {QUEEN_TABLE_OPENING, QUEEN_TABLE_ENDGAME},
        {KING_TABLE_OPENING, KING_TABLE_ENDGAME}};